package com.lkl.sp.db.dc.mapping.gen;

import com.lkl.sp.db.dc.mapping.gen.bean.SpPayment;
import com.lkl.sp.db.dc.mapping.gen.bean.SpPaymentExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface SpPaymentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=SpPaymentSqlProvider.class, method="countByExample")
    int countByExample(SpPaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @DeleteProvider(type=SpPaymentSqlProvider.class, method="deleteByExample")
    int deleteByExample(SpPaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @Delete({
        "delete from `sp_payment`",
        "where pay_no = #{payNo,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String payNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @Insert({
        "insert into `sp_payment` (pay_no, amount, ",
        "order_no, pay_time, ",
        "create_time, update_time)",
        "values (#{payNo,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE}, ",
        "#{orderNo,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    int insert(SpPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @InsertProvider(type=SpPaymentSqlProvider.class, method="insertSelective")
    int insertSelective(SpPayment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @SelectProvider(type=SpPaymentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    List<SpPayment> selectByExample(SpPaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "pay_no, amount, order_no, pay_time, create_time, update_time",
        "from `sp_payment`",
        "where pay_no = #{payNo,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="pay_no", property="payNo", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="amount", property="amount", jdbcType=JdbcType.DOUBLE),
        @Result(column="order_no", property="orderNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pay_time", property="payTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP)
    })
    SpPayment selectByPrimaryKey(String payNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SpPaymentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") SpPayment record, @Param("example") SpPaymentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table `sp_payment`
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SpPaymentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(SpPayment record);
}